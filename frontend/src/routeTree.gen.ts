/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as SavingsRouteImport } from './routes/savings'
import { Route as LearnRouteImport } from './routes/learn'
import { Route as CompaniesRouteImport } from './routes/companies'
import { Route as CalculatorsRouteImport } from './routes/calculators'
import { Route as IndexRouteImport } from './routes/index'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const SavingsRoute = SavingsRouteImport.update({
  id: '/savings',
  path: '/savings',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnRoute = LearnRouteImport.update({
  id: '/learn',
  path: '/learn',
  getParentRoute: () => rootRouteImport,
} as any)
const CompaniesRoute = CompaniesRouteImport.update({
  id: '/companies',
  path: '/companies',
  getParentRoute: () => rootRouteImport,
} as any)
const CalculatorsRoute = CalculatorsRouteImport.update({
  id: '/calculators',
  path: '/calculators',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calculators': typeof CalculatorsRoute
  '/companies': typeof CompaniesRoute
  '/learn': typeof LearnRoute
  '/savings': typeof SavingsRoute
  '/settings': typeof SettingsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calculators': typeof CalculatorsRoute
  '/companies': typeof CompaniesRoute
  '/learn': typeof LearnRoute
  '/savings': typeof SavingsRoute
  '/settings': typeof SettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/calculators': typeof CalculatorsRoute
  '/companies': typeof CompaniesRoute
  '/learn': typeof LearnRoute
  '/savings': typeof SavingsRoute
  '/settings': typeof SettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calculators'
    | '/companies'
    | '/learn'
    | '/savings'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/calculators' | '/companies' | '/learn' | '/savings' | '/settings'
  id:
    | '__root__'
    | '/'
    | '/calculators'
    | '/companies'
    | '/learn'
    | '/savings'
    | '/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalculatorsRoute: typeof CalculatorsRoute
  CompaniesRoute: typeof CompaniesRoute
  LearnRoute: typeof LearnRoute
  SavingsRoute: typeof SavingsRoute
  SettingsRoute: typeof SettingsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/savings': {
      id: '/savings'
      path: '/savings'
      fullPath: '/savings'
      preLoaderRoute: typeof SavingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn': {
      id: '/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LearnRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/companies': {
      id: '/companies'
      path: '/companies'
      fullPath: '/companies'
      preLoaderRoute: typeof CompaniesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calculators': {
      id: '/calculators'
      path: '/calculators'
      fullPath: '/calculators'
      preLoaderRoute: typeof CalculatorsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalculatorsRoute: CalculatorsRoute,
  CompaniesRoute: CompaniesRoute,
  LearnRoute: LearnRoute,
  SavingsRoute: SavingsRoute,
  SettingsRoute: SettingsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
